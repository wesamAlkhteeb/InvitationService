// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Subscriptions.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace InvitationQueryTest {
  public static partial class Subscriptions
  {
    static readonly string __ServiceName = "Subscriptions.v1.Subscriptions";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::InvitationQueryTest.SubscriptionPage> __Marshaller_Subscriptions_v1_SubscriptionPage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::InvitationQueryTest.SubscriptionPage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::InvitationQueryTest.ManySubscrptor> __Marshaller_Subscriptions_v1_ManySubscrptor = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::InvitationQueryTest.ManySubscrptor.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::InvitationQueryTest.ManySubscrption> __Marshaller_Subscriptions_v1_ManySubscrption = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::InvitationQueryTest.ManySubscrption.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::InvitationQueryTest.Status> __Marshaller_Subscriptions_v1_Status = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::InvitationQueryTest.Status.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::InvitationQueryTest.StatusResult> __Marshaller_Subscriptions_v1_StatusResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::InvitationQueryTest.StatusResult.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::InvitationQueryTest.SubscriptionPage, global::InvitationQueryTest.ManySubscrptor> __Method_GetAllSubscriptorInSubscription = new grpc::Method<global::InvitationQueryTest.SubscriptionPage, global::InvitationQueryTest.ManySubscrptor>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllSubscriptorInSubscription",
        __Marshaller_Subscriptions_v1_SubscriptionPage,
        __Marshaller_Subscriptions_v1_ManySubscrptor);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::InvitationQueryTest.SubscriptionPage, global::InvitationQueryTest.ManySubscrption> __Method_GetAllSubscriptionForSubscriptor = new grpc::Method<global::InvitationQueryTest.SubscriptionPage, global::InvitationQueryTest.ManySubscrption>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllSubscriptionForSubscriptor",
        __Marshaller_Subscriptions_v1_SubscriptionPage,
        __Marshaller_Subscriptions_v1_ManySubscrption);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::InvitationQueryTest.Status, global::InvitationQueryTest.StatusResult> __Method_GetStatusSbuscriptorInSbuscription = new grpc::Method<global::InvitationQueryTest.Status, global::InvitationQueryTest.StatusResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStatusSbuscriptorInSbuscription",
        __Marshaller_Subscriptions_v1_Status,
        __Marshaller_Subscriptions_v1_StatusResult);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::InvitationQueryTest.SubscriptionPage, global::InvitationQueryTest.ManySubscrption> __Method_GetAllSubscriptionForOwner = new grpc::Method<global::InvitationQueryTest.SubscriptionPage, global::InvitationQueryTest.ManySubscrption>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllSubscriptionForOwner",
        __Marshaller_Subscriptions_v1_SubscriptionPage,
        __Marshaller_Subscriptions_v1_ManySubscrption);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::InvitationQueryTest.SubscriptionsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Subscriptions</summary>
    public partial class SubscriptionsClient : grpc::ClientBase<SubscriptionsClient>
    {
      /// <summary>Creates a new client for Subscriptions</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SubscriptionsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Subscriptions that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SubscriptionsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SubscriptionsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SubscriptionsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::InvitationQueryTest.ManySubscrptor GetAllSubscriptorInSubscription(global::InvitationQueryTest.SubscriptionPage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSubscriptorInSubscription(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::InvitationQueryTest.ManySubscrptor GetAllSubscriptorInSubscription(global::InvitationQueryTest.SubscriptionPage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllSubscriptorInSubscription, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::InvitationQueryTest.ManySubscrptor> GetAllSubscriptorInSubscriptionAsync(global::InvitationQueryTest.SubscriptionPage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSubscriptorInSubscriptionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::InvitationQueryTest.ManySubscrptor> GetAllSubscriptorInSubscriptionAsync(global::InvitationQueryTest.SubscriptionPage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllSubscriptorInSubscription, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::InvitationQueryTest.ManySubscrption GetAllSubscriptionForSubscriptor(global::InvitationQueryTest.SubscriptionPage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSubscriptionForSubscriptor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::InvitationQueryTest.ManySubscrption GetAllSubscriptionForSubscriptor(global::InvitationQueryTest.SubscriptionPage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllSubscriptionForSubscriptor, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::InvitationQueryTest.ManySubscrption> GetAllSubscriptionForSubscriptorAsync(global::InvitationQueryTest.SubscriptionPage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSubscriptionForSubscriptorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::InvitationQueryTest.ManySubscrption> GetAllSubscriptionForSubscriptorAsync(global::InvitationQueryTest.SubscriptionPage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllSubscriptionForSubscriptor, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::InvitationQueryTest.StatusResult GetStatusSbuscriptorInSbuscription(global::InvitationQueryTest.Status request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStatusSbuscriptorInSbuscription(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::InvitationQueryTest.StatusResult GetStatusSbuscriptorInSbuscription(global::InvitationQueryTest.Status request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetStatusSbuscriptorInSbuscription, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::InvitationQueryTest.StatusResult> GetStatusSbuscriptorInSbuscriptionAsync(global::InvitationQueryTest.Status request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStatusSbuscriptorInSbuscriptionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::InvitationQueryTest.StatusResult> GetStatusSbuscriptorInSbuscriptionAsync(global::InvitationQueryTest.Status request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetStatusSbuscriptorInSbuscription, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::InvitationQueryTest.ManySubscrption GetAllSubscriptionForOwner(global::InvitationQueryTest.SubscriptionPage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSubscriptionForOwner(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::InvitationQueryTest.ManySubscrption GetAllSubscriptionForOwner(global::InvitationQueryTest.SubscriptionPage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllSubscriptionForOwner, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::InvitationQueryTest.ManySubscrption> GetAllSubscriptionForOwnerAsync(global::InvitationQueryTest.SubscriptionPage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSubscriptionForOwnerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::InvitationQueryTest.ManySubscrption> GetAllSubscriptionForOwnerAsync(global::InvitationQueryTest.SubscriptionPage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllSubscriptionForOwner, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SubscriptionsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SubscriptionsClient(configuration);
      }
    }

  }
}
#endregion
